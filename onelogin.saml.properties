#  If 'strict' is True, then the Java Toolkit will reject unsigned
#  or unencrypted messages if it expects them signed or encrypted
#  Also will reject the messages if not strictly follow the SAML
onelogin.saml2.strict =  false

# Enable debug mode (to print errors)
onelogin.saml2.debug =  true


#  Service Provider Data that we are deploying
#

#  Identifier of the SP entity  (must be a URI)
onelogin.saml2.sp.entityid = https://app.onelogin.com/saml/metadata/12eb2807-6b31-4a3a-80a0-56bc1052465d

# Specifies info about where and how the <AuthnResponse> message MUST be
#  returned to the requester, in this case our SP.
# URL Location where the <Response> from the IdP will be returned
onelogin.saml2.sp.assertion_consumer_service.url = https://hc9t07021.itcs.hpecorp.net:8443/q2cmast/acs.jsp

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-POST binding only
onelogin.saml2.sp.assertion_consumer_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST

# Specifies info about where and how the <Logout Response> message MUST be
# returned to the requester, in this case our SP.
onelogin.saml2.sp.single_logout_service.url = http://hc9t07021.itcs.hpecorp.net:8443/q2cmast/sls.jsp

# SAML protocol binding to be used when returning the <LogoutResponse> or sending the <LogoutRequest>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.sp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Specifies constraints on the name identifier to be used to
# represent the requested subject.
# Take a look on lib/Saml2/Constants.php to see the NameIdFormat supported
onelogin.saml2.sp.nameidformat = urn:oasis:names:tc:SAML:1.1:nameid-format:anas.mohammad@hpe.com
#unspecified

# Usually x509cert and privateKey of the SP are provided by files placed at
# the certs folder. But we can also provide them with the following parameters
onelogin.saml2.sp.x509cert = MIIG0jCCBbqgAwIBAgIQA31tLA7i7pMJAM4T8AFURTANBgkqhkiG9w0BAQsFADBEMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMR4wHAYDVQQDExVEaWdpQ2VydCBHbG9iYWwgQ0EgRzIwHhcNMTgwMzI4MDAwMDAwWhcNMjAwMzI4MTIwMDAwWjCBnzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExEjAQBgNVBAcTCVBhbG8gQWx0bzErMCkGA1UEChMiSGV3bGV0dCBQYWNrYXJkIEVudGVycHJpc2UgQ29tcGFueTEXMBUGA1UECxMOQ3liZXIgU2VjdXJpdHkxITAfBgNVBAMTGGhwZS1pdGctMjAxOC5pZHAuaHBlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKah6ieugwX/XqsYKThWEdyyYayNs4JFKBRdj0wX2wOA0mp4eZdau3OxUc1is2jstux1AK2ZX2CXUV80PKsww14DdbtuC23+SGAHGWm/SPTO1w0ZEi9lmJvFLBkXv0qzw2DNxy4t1Vb+4zxcUcCQMuGDzcYbfpo+q9eH2hDX3Dy3iVbzOrY6ODYX3JA4nMMD+flR38uYkk4X+dgnuoBKFOa+G9m7fzFrOuTACCDFijtFrAJYTGoS8R6nSsnB1lwpZyyh91W2LIQNsLgzf1GwbRcY6LJKt2EETsHPC8ECAROn3/NZD/lvs+VxzZ79ivC8cpSBluuRsyurBbd2J/E4OxECAwEAAaOCA2IwggNeMB8GA1UdIwQYMBaAFCRuKy3QapJRUSVpAaqaR6aJ50AgMB0GA1UdDgQWBBQrXWZxuUu9hf3yU7qy3xRLZWpTrzAjBgNVHREEHDAaghhocGUtaXRnLTIwMTguaWRwLmhwZS5jb20wDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjB3BgNVHR8EcDBuMDWgM6Axhi9odHRwOi8vY3JsMy5kaWdpY2VydC5jb20vRGlnaUNlcnRHbG9iYWxDQUcyLmNybDA1oDOgMYYvaHR0cDovL2NybDQuZGlnaWNlcnQuY29tL0RpZ2lDZXJ0R2xvYmFsQ0FHMi5jcmwwTAYDVR0gBEUwQzA3BglghkgBhv1sAQEwKjAoBggrBgEFBQcCARYcaHR0cHM6Ly93d3cuZGlnaWNlcnQuY29tL0NQUzAIBgZngQwBAgIwdAYIKwYBBQUHAQEEaDBmMCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC5kaWdpY2VydC5jb20wPgYIKwYBBQUHMAKGMmh0dHA6Ly9jYWNlcnRzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2VydEdsb2JhbENBRzIuY3J0MAkGA1UdEwQCMAAwggF+BgorBgEEAdZ5AgQCBIIBbgSCAWoBaAB2AKS5CZC0GFgUh7sTosxncAo8NZgE+RvfuON3zQ7IDdwQAAABYm5uD8EAAAQDAEcwRQIhAMdG1vVHgpGcip7V8/f9+ADcUlJbbNJhRRbgJ4PLBtOsAiAc2sSMjAWnXAGMZDujxPDEgmNaREQmwjpRBuSeefSJRAB2AG9Tdqwx8DEZ2JkApFEV/3cVHBHZAsEAKQaNsgiaN9kTAAABYm5uEMYAAAQDAEcwRQIgWUNuY0VDatTm3otRRSNCJCcurI9Lzc0V4PgzNJK+No0CIQDczqJSzfe9fvoVwnDUKkae4NaA79tmHqS2bs8DY3MTXQB2ALvZ37wfinG1k5Qjl6qSe0c4V5UKq1LoGpCWZDaOHtGFAAABYm5uEE8AAAQDAEcwRQIhAK5WsgsaU4D6IvDrFby30hGz6/duYaGaXewS5AbNqXFYAiBcIfmOfCcfFeqQBL7pGXEmyjWvwWQ61R4Xy+1zSM4jhjANBgkqhkiG9w0BAQsFAAOCAQEASyrvIReYKwL32PZ9uwdoCHC0yP2cRw2d6vjX248bP2Y3gymlTBDNDLk5yD2XLh9ai+JjsCDwiB4WiE2/FBiv0/GymdgjeYYPODGgT5VclVNxhNMy19l+zhVIlGRSZualh+j18wtso/3wChvzCYYZ7vScrplgUxtNOaCIiooPsSsCTwOKdZsBJOLDdHUoWjQ8ng9kysSVy4u+Qt9SvRM+tZvFeus9tWRD9cc1/sdoALy/vmU7ZdJcavWRv8Whd74C42VflaCngajujUaPvr87Ab40kehwp5uSdxOcmgG0cSripyODC/P/LihTBzhfhan3BaLDL2Z24HEGTVw9rdDpEg==

# Requires Format PKCS#8   BEGIN PRIVATE KEY	     
# If you have     PKCS#1   BEGIN RSA PRIVATE KEY  convert it by   openssl pkcs8 -topk8 -inform pem -nocrypt -in sp.rsa_key -outform pem -out sp.pem
onelogin.saml2.sp.privatekey =

# Identity Provider Data that we want connect with our SP
#

# Identifier of the IdP entity  (must be a URI)
onelogin.saml2.idp.entityid = https://login-itg.ext.hpe.com

# SSO endpoint info of the IdP. (Authentication Request protocol)
# URL Target of the IdP where the SP will send the Authentication Request Message
onelogin.saml2.idp.single_sign_on_service.url = https://login-itg.ext.hpe.com/idp/startSSO.ping?PartnerSpId=https://app.onelogin.com/saml/metadata/12eb2807-6b31-4a3a-80a0-56bc1052465d

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_sign_on_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# SLO endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Request
onelogin.saml2.idp.single_logout_service.url = https://login-itg.ext.hpe.com/idp/startSSO.ping?PartnerSpId=https://app.onelogin.com/saml/metadata/12eb2807-6b31-4a3a-80a0-56bc1052465d

# Optional SLO Response endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Response. If left blank, same URL as onelogin.saml2.idp.single_logout_service.url will be used.
# Some IdPs use a separate URL for sending a logout request and response, use this property to set the separate response url
onelogin.saml2.idp.single_logout_service.response.url =

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Public x509 certificate of the IdP
onelogin.saml2.idp.x509cert = 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

# Instead of using the whole x509cert you can use a fingerprint in order to
# validate a SAMLResponse (but you still need the x509cert to validate LogoutRequest and LogoutResponse using the HTTP-Redirect binding).
# But take in mind that the fingerprint, is a hash, so at the end is open to a collision attack that can end on a signature validation bypass,
# that why we don't recommend it use for production environments.
# (openssl x509 -noout -fingerprint -in "idp.crt" to generate it,
# or add for example the -sha256 , -sha384 or -sha512 parameter)
#
# If a fingerprint is provided, then the certFingerprintAlgorithm is required in order to
# let the toolkit know which Algorithm was used. Possible values: sha1, sha256, sha384 or sha512
# 'sha1' is the default value.
onelogin.saml2.idp.certfingerprint = ikaVjzKaTnwzqFJk43BHC+Mn6JBUP2GY2Ueb6fcxAHlm5kg0bgYzryG1UmiI4//d8LE0R8t5l4XFHGj6AYZEmRsNJJjHi8st3Q9TTmHWOOcspHpiIFFlqxP5j8uef/J/Tyd5xP9AI7w3dcryHY7y9JBTVuQOsRddBymnXanFpnTe6yUw9DAaK3ht5mRWfri3XI9Ja6jOcVWI7Xbfk+hMedeByapPtmOky7dpKbKpjI35XoYwCF5+3LQtvbd3fWRitxuXuB8KE6e3HsDkw+83kzwHDDWX/jzyrpZg43lvh40lShItwXrPWKCUQLSLbmV8bqryXlw17OThlY/lVBob+g==
onelogin.saml2.idp.certfingerprint_algorithm = sha256


# Security settings
#

# Indicates that the nameID of the <samlp:logoutRequest> sent by this SP
# will be encrypted.
onelogin.saml2.security.nameid_encrypted = false

# Indicates whether the <samlp:AuthnRequest> messages sent by this SP
# will be signed.              [The Metadata of the SP will offer this info]
onelogin.saml2.security.authnrequest_signed = false

# Indicates whether the <samlp:logoutRequest> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutrequest_signed = false

# Indicates whether the <samlp:logoutResponse> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutresponse_signed = false

# Sign the Metadata
# Empty means no signature, or comma separate the keyFileName and the certFileName
onelogin.saml2.security.want_messages_signed = 

# Indicates a requirement for the <samlp:Response>, <samlp:LogoutRequest> and
# <samlp:LogoutResponse> elements received by this SP to be signed.
onelogin.saml2.security.want_assertions_signed = false

# Indicates a requirement for the Metadata of this SP to be signed.
# Right now supported null (in order to not sign) or true (sign using SP private key) 
onelogin.saml2.security.sign_metadata = 

# Indicates a requirement for the Assertions received by this SP to be encrypted
onelogin.saml2.security.want_assertions_encrypted = false

# Indicates a requirement for the NameID received by this SP to be encrypted
onelogin.saml2.security.want_nameid_encrypted = false

# Authentication context.
# Set Empty and no AuthContext will be sent in the AuthNRequest
# You can set multiple values (comma separated them)
onelogin.saml2.security.requested_authncontext = urn:oasis:names:tc:SAML:2.0:ac:classes:Password

# Allows the authn comparison parameter to be set, defaults to 'exact'
onelogin.saml2.security.onelogin.saml2.security.requested_authncontextcomparison = exact


# Indicates if the SP will validate all received xmls.
# (In order to validate the xml, 'strict' and 'wantXMLValidation' must be true).
onelogin.saml2.security.want_xml_validation = true

# Algorithm that the toolkit will use on signing process. Options:
#  'http://www.w3.org/2000/09/xmldsig#rsa-sha1'
#  'http://www.w3.org/2000/09/xmldsig#dsa-sha1'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha384'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512'
onelogin.saml2.security.signature_algorithm = http://www.w3.org/2000/09/xmldsig#rsa-sha256

# Organization
onelogin.saml2.organization.name = SP Java 
onelogin.saml2.organization.displayname = SP Java Example
onelogin.saml2.organization.url = http://sp.example.com
onelogin.saml2.organization.lang = 

# Contacts
onelogin.saml2.contacts.technical.given_name = Technical Guy
onelogin.saml2.contacts.technical.email_address = technical@example.com
onelogin.saml2.contacts.support.given_name = Support Guy
onelogin.saml2.contacts.support.email_address = support@@example.com
